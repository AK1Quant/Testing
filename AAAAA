---
title: "Stock Ticker Dashboard"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    social: menu
runtime: shiny
---

```{r setup, include=FALSE}
library(shiny)
library(flexdashboard)
library(DT)
library(dplyr)
library(openxlsx)

# Sample Data
ticker_data <- data.frame(
  Ticker = c("AAPL", "GOOGL", "AMZN", "TSLA", "MSFT"),
  Company = c("Apple", "Google", "Amazon", "Tesla", "Microsoft"),
  Sector = c("Technology", "Technology", "E-commerce", "Automotive", "Technology"),
  Price = c(175, 2850, 3400, 900, 299),
  stringsAsFactors = FALSE
)

# Reactive values to store selected rows
selected_rows <- reactiveValues(data = data.frame())
```

## Selection

```{r}
fluidRow(
  column(12, actionButton("select_all", "Select All Visible")),
  column(12, DTOutput("table"))
)

output$table <- renderDT({
  datatable(ticker_data, filter = "top", selection = "multiple", options = list(pageLength = 10, width = "100%", height = "500px"), server = FALSE)
})

observeEvent(input$select_all, {
  data_filtered <- input$table_rows_all  # Get all visible rows after filtering
  if (!is.null(data_filtered)) {
    selected_rows$data <- bind_rows(selected_rows$data, ticker_data[data_filtered, , drop = FALSE]) %>% distinct()
  }
})

observeEvent(input$table_rows_selected, {
  selected_rows$data <- bind_rows(selected_rows$data, ticker_data[input$table_rows_selected, , drop = FALSE]) %>% distinct()
})
```

## Preview

```{r}
output$preview <- renderDT({
  req(nrow(selected_rows$data) > 0)  # Ensure there's data selected
  datatable(selected_rows$data, options = list(pageLength = 10, width = "100%", height = "500px"))
})
```

```{r server, include=FALSE}
server <- function(input, output, session) {
  output$table <- renderDT({
    datatable(ticker_data, selection = "multiple", filter = "top", options = list(pageLength = 10, width = "100%", height = "500px"), server = FALSE)
  })
}
```
